{"ast":null,"code":"import _classCallCheck from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Loading/index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nvar TICK_RATE = 500;\n\nvar Loading =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Loading, _Component);\n\n  function Loading() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Loading);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Loading)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dots: 0\n    };\n\n    _this.onTick = function () {\n      _this.setState(function (prevState) {\n        return {\n          dots: (prevState.dots + 1) % 4\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Loading, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.interval = setInterval(this.onTick, TICK_RATE);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isCenter = this.props.isCenter;\n      var dots = this.state.dots;\n      var classNames = ['Loading'];\n\n      if (isCenter) {\n        classNames.push('Loading_center');\n      }\n\n      return React.createElement(\"div\", {\n        className: classNames.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Loading \", new Array(dots).fill(0).map(function (dot) {\n        return '.';\n      })));\n    }\n  }]);\n\n  return Loading;\n}(Component);\n\nexport default Loading;","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Loading/index.js"],"names":["React","Component","TICK_RATE","Loading","state","dots","onTick","setState","prevState","interval","setInterval","clearInterval","isCenter","props","classNames","push","join","Array","fill","map","dot"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,aAAP;AAEA,IAAMC,SAAS,GAAG,GAAlB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAYRC,M,GAAS,YAAM;AACb,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEH,UAAAA,IAAI,EAAE,CAACG,SAAS,CAACH,IAAV,GAAiB,CAAlB,IAAuB;AAA/B,SAAL;AAAA,OAAvB;AACD,K;;;;;;;wCAVmB;AAClB,WAAKI,QAAL,GAAgBC,WAAW,CAAC,KAAKJ,MAAN,EAAcJ,SAAd,CAA3B;AACD;;;2CAEsB;AACrBS,MAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb;AACD;;;6BAMQ;AAAA,UACCG,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAAA,UAECP,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAIP,UAAMS,UAAU,GAAG,CAAC,SAAD,CAAnB;;AAEA,UAAIF,QAAJ,EAAc;AACZE,QAAAA,UAAU,CAACC,IAAX,CAAgB,gBAAhB;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAED,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,IAAIC,KAAJ,CAAUZ,IAAV,EAAgBa,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,UAAAC,GAAG;AAAA,eAAI,GAAJ;AAAA,OAA/B,CADX,CADF,CADF;AAOD;;;;EAlCmBnB,S;;AAqCtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './style.css';\n\nconst TICK_RATE = 500;\n\nclass Loading extends Component {\n  state = {\n    dots: 0,\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(this.onTick, TICK_RATE);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onTick = () => {\n    this.setState(prevState => ({ dots: (prevState.dots + 1) % 4 }));\n  };\n\n  render() {\n    const { isCenter } = this.props;\n    const { dots } = this.state;\n\n    const classNames = ['Loading'];\n\n    if (isCenter) {\n      classNames.push('Loading_center');\n    }\n\n    return (\n      <div className={classNames.join(' ')}>\n        <small>\n          Loading {new Array(dots).fill(0).map(dot => '.')}\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n"]},"metadata":{},"sourceType":"module"}