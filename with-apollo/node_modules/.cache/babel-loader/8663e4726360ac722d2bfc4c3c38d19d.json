{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Profile/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    viewer {\\n      repositories(\\n        first: 5\\n        orderBy: { direction: DESC, field: STARGAZERS }\\n      ) {\\n        edges {\\n          node {\\n            ...repository\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport RepositoryList, { REPOSITORY_FRAGMENT } from '../Repository';\nimport Loading from '../Loading';\nimport ErrorMessage from '../Error';\nvar GET_REPOSITORIES_OF_CURRENT_USER = gql(_templateObject(), REPOSITORY_FRAGMENT);\n\nvar Profile = function Profile() {\n  return React.createElement(Query, {\n    query: GET_REPOSITORIES_OF_CURRENT_USER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n\n    if (error) {\n      return React.createElement(ErrorMessage, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n\n    var viewer = data.viewer;\n\n    if (loading || !viewer) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(RepositoryList, {\n      repositories: viewer.repositories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Profile/index.js"],"names":["React","gql","Query","RepositoryList","REPOSITORY_FRAGMENT","Loading","ErrorMessage","GET_REPOSITORIES_OF_CURRENT_USER","Profile","data","loading","error","viewer","repositories"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,cAAP,IAAyBC,mBAAzB,QAAoD,eAApD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,IAAMC,gCAAgC,GAAGN,GAAH,oBAgBlCG,mBAhBkC,CAAtC;;AAmBA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AAC7B,QAAIA,KAAJ,EAAW;AACT,aAAO,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAH4B,QAKrBC,MALqB,GAKVH,IALU,CAKrBG,MALqB;;AAO7B,QAAIF,OAAO,IAAI,CAACE,MAAhB,EAAwB;AACtB,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAEA,MAAM,CAACC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAbH,CADc;AAAA,CAAhB;;AAkBA,eAAeL,OAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nimport RepositoryList, { REPOSITORY_FRAGMENT } from '../Repository';\nimport Loading from '../Loading';\nimport ErrorMessage from '../Error';\n\nconst GET_REPOSITORIES_OF_CURRENT_USER = gql`\n  {\n    viewer {\n      repositories(\n        first: 5\n        orderBy: { direction: DESC, field: STARGAZERS }\n      ) {\n        edges {\n          node {\n            ...repository\n          }\n        }\n      }\n    }\n  }\n\n  ${REPOSITORY_FRAGMENT}\n`;\n\nconst Profile = () => (\n  <Query query={GET_REPOSITORIES_OF_CURRENT_USER}>\n    {({ data, loading, error }) => {\n      if (error) {\n        return <ErrorMessage error={error} />;\n      }\n\n      const { viewer } = data;\n\n      if (loading || !viewer) {\n        return <Loading />;\n      }\n\n      return <RepositoryList repositories={viewer.repositories} />;\n    }}\n  </Query>\n);\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}