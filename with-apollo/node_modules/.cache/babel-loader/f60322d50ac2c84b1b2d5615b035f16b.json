{"ast":null,"code":"import _toConsumableArray from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Repository/RepositoryList/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport FetchMore from '../../FetchMore';\nimport RepositoryItem from '../RepositoryItem';\nimport Issues from '../../Issue';\nimport '../style.css';\n\nvar getUpdateQuery = function getUpdateQuery(entry) {\n  return function (previousResult, _ref) {\n    var fetchMoreResult = _ref.fetchMoreResult;\n\n    if (!fetchMoreResult) {\n      return previousResult;\n    }\n\n    return _objectSpread({}, previousResult, _defineProperty({}, entry, _objectSpread({}, previousResult[entry], {\n      repositories: _objectSpread({}, previousResult[entry].repositories, {}, fetchMoreResult[entry].repositories, {\n        edges: [].concat(_toConsumableArray(previousResult[entry].repositories.edges), _toConsumableArray(fetchMoreResult[entry].repositories.edges))\n      })\n    })));\n  };\n};\n\nvar RepositoryList = function RepositoryList(_ref2) {\n  var repositories = _ref2.repositories,\n      loading = _ref2.loading,\n      fetchMore = _ref2.fetchMore,\n      entry = _ref2.entry;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, repositories.edges.map(function (_ref3) {\n    var node = _ref3.node;\n    return React.createElement(\"div\", {\n      key: node.id,\n      className: \"RepositoryItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(RepositoryItem, Object.assign({}, node, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Issues, {\n      repositoryName: node.name,\n      repositoryOwner: node.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }), React.createElement(FetchMore, {\n    loading: loading,\n    hasNextPage: repositories.pageInfo.hasNextPage,\n    variables: {\n      cursor: repositories.pageInfo.endCursor\n    },\n    updateQuery: getUpdateQuery(entry),\n    fetchMore: fetchMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Repositories\"));\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Repository/RepositoryList/index.js"],"names":["React","Fragment","FetchMore","RepositoryItem","Issues","getUpdateQuery","entry","previousResult","fetchMoreResult","repositories","edges","RepositoryList","loading","fetchMore","map","node","id","name","owner","login","pageInfo","hasNextPage","cursor","endCursor"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,cAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAI,UAC9BC,cAD8B,QAG3B;AAAA,QADDC,eACC,QADDA,eACC;;AACH,QAAI,CAACA,eAAL,EAAsB;AACpB,aAAOD,cAAP;AACD;;AAED,6BACKA,cADL,sBAEGD,KAFH,oBAGOC,cAAc,CAACD,KAAD,CAHrB;AAIIG,MAAAA,YAAY,oBACPF,cAAc,CAACD,KAAD,CAAd,CAAsBG,YADf,MAEPD,eAAe,CAACF,KAAD,CAAf,CAAuBG,YAFhB;AAGVC,QAAAA,KAAK,+BACAH,cAAc,CAACD,KAAD,CAAd,CAAsBG,YAAtB,CAAmCC,KADnC,sBAEAF,eAAe,CAACF,KAAD,CAAf,CAAuBG,YAAvB,CAAoCC,KAFpC;AAHK;AAJhB;AAcD,GAtB2B;AAAA,CAA5B;;AAwBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MACrBF,YADqB,SACrBA,YADqB;AAAA,MAErBG,OAFqB,SAErBA,OAFqB;AAAA,MAGrBC,SAHqB,SAGrBA,SAHqB;AAAA,MAIrBP,KAJqB,SAIrBA,KAJqB;AAAA,SAMrB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,YAAY,CAACC,KAAb,CAAmBI,GAAnB,CAAuB;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WACtB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD,oBAAoBD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAGE,oBAAC,MAAD;AACE,MAAA,cAAc,EAAEA,IAAI,CAACE,IADvB;AAEE,MAAA,eAAe,EAAEF,IAAI,CAACG,KAAL,CAAWC,KAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADsB;AAAA,GAAvB,CADH,EAYE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEP,OADX;AAEE,IAAA,WAAW,EAAEH,YAAY,CAACW,QAAb,CAAsBC,WAFrC;AAGE,IAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEb,YAAY,CAACW,QAAb,CAAsBG;AADrB,KAHb;AAME,IAAA,WAAW,EAAElB,cAAc,CAACC,KAAD,CAN7B;AAOE,IAAA,SAAS,EAAEO,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CANqB;AAAA,CAAvB;;AAgCA,eAAeF,cAAf","sourcesContent":["import React, { Fragment } from 'react';\n\nimport FetchMore from '../../FetchMore';\nimport RepositoryItem from '../RepositoryItem';\nimport Issues from '../../Issue';\n\nimport '../style.css';\n\nconst getUpdateQuery = entry => (\n  previousResult,\n  { fetchMoreResult },\n) => {\n  if (!fetchMoreResult) {\n    return previousResult;\n  }\n\n  return {\n    ...previousResult,\n    [entry]: {\n      ...previousResult[entry],\n      repositories: {\n        ...previousResult[entry].repositories,\n        ...fetchMoreResult[entry].repositories,\n        edges: [\n          ...previousResult[entry].repositories.edges,\n          ...fetchMoreResult[entry].repositories.edges,\n        ],\n      },\n    },\n  };\n};\n\nconst RepositoryList = ({\n  repositories,\n  loading,\n  fetchMore,\n  entry,\n}) => (\n  <Fragment>\n    {repositories.edges.map(({ node }) => (\n      <div key={node.id} className=\"RepositoryItem\">\n        <RepositoryItem {...node} />\n\n        <Issues\n          repositoryName={node.name}\n          repositoryOwner={node.owner.login}\n        />\n      </div>\n    ))}\n\n    <FetchMore\n      loading={loading}\n      hasNextPage={repositories.pageInfo.hasNextPage}\n      variables={{\n        cursor: repositories.pageInfo.endCursor,\n      }}\n      updateQuery={getUpdateQuery(entry)}\n      fetchMore={fetchMore}\n    >\n      Repositories\n    </FetchMore>\n  </Fragment>\n);\n\nexport default RepositoryList;\n"]},"metadata":{},"sourceType":"module"}