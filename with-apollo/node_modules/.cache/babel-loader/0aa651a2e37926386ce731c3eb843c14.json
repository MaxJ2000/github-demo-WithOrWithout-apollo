{"ast":null,"code":"var _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Issue/IssueItem/index.js\";\nimport React from 'react';\nimport { withState } from 'recompose';\nimport Button from '../../Button';\nimport Comments from '../../Comment';\nimport Link from '../../Link';\nimport './style.css';\n\nvar IssueItem = function IssueItem(_ref) {\n  var issue = _ref.issue,\n      repositoryOwner = _ref.repositoryOwner,\n      repositoryName = _ref.repositoryName,\n      isShowComments = _ref.isShowComments,\n      onShowComments = _ref.onShowComments;\n  return React.createElement(\"div\", {\n    className: \"IssueItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return onShowComments(!isShowComments);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, isShowComments ? '-' : '+'), React.createElement(\"div\", {\n    className: \"IssueItem-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: issue.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, issue.title)), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: issue.bodyHTML\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), isShowComments && React.createElement(Comments, {\n    repositoryOwner: repositoryOwner,\n    repositoryName: repositoryName,\n    issue: issue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default withState('isShowComments', 'onShowComments', false)(IssueItem);","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Issue/IssueItem/index.js"],"names":["React","withState","Button","Comments","Link","IssueItem","issue","repositoryOwner","repositoryName","isShowComments","onShowComments","url","title","__html","bodyHTML"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,aAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAChBC,KADgB,QAChBA,KADgB;AAAA,MAEhBC,eAFgB,QAEhBA,eAFgB;AAAA,MAGhBC,cAHgB,QAGhBA,cAHgB;AAAA,MAIhBC,cAJgB,QAIhBA,cAJgB;AAAA,MAKhBC,cALgB,QAKhBA,cALgB;AAAA,SAOhB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMA,cAAc,CAAC,CAACD,cAAF,CAApB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,cAAc,GAAG,GAAH,GAAS,GAD1B,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,KAAK,CAACK,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBL,KAAK,CAACM,KAA9B,CADF,CADF,EAIE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEP,KAAK,CAACQ;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMGL,cAAc,IACb,oBAAC,QAAD;AACE,IAAA,eAAe,EAAEF,eADnB;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,KAAK,EAAEF,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CALF,CAPgB;AAAA,CAAlB;;AA6BA,eAAeL,SAAS,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,KAArC,CAAT,CACbI,SADa,CAAf","sourcesContent":["import React from 'react';\nimport { withState } from 'recompose';\n\nimport Button from '../../Button';\nimport Comments from '../../Comment';\nimport Link from '../../Link';\n\nimport './style.css';\n\nconst IssueItem = ({\n  issue,\n  repositoryOwner,\n  repositoryName,\n  isShowComments,\n  onShowComments,\n}) => (\n  <div className=\"IssueItem\">\n    <Button onClick={() => onShowComments(!isShowComments)}>\n      {isShowComments ? '-' : '+'}\n    </Button>\n\n    <div className=\"IssueItem-content\">\n      <h3>\n        <Link href={issue.url}>{issue.title}</Link>\n      </h3>\n      <div dangerouslySetInnerHTML={{ __html: issue.bodyHTML }} />\n\n      {isShowComments && (\n        <Comments\n          repositoryOwner={repositoryOwner}\n          repositoryName={repositoryName}\n          issue={issue}\n        />\n      )}\n    </div>\n  </div>\n);\n\nexport default withState('isShowComments', 'onShowComments', false)(\n  IssueItem,\n);\n"]},"metadata":{},"sourceType":"module"}