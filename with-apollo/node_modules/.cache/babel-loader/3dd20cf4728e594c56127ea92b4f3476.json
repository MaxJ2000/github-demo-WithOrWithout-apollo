{"ast":null,"code":"var _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './style.css';\nvar GITHUB_BASE_URL = 'https://api.github.com/graphql';\nvar httpLink = new HttpLink({\n  uri: GITHUB_BASE_URL,\n  headers: {\n    authorization: \"Bearer \".concat(process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN)\n  }\n});\nvar errorLink = onError(function (_ref) {\n  var graphQLErrors = _ref.graphQLErrors,\n      networkError = _ref.networkError;\n\n  if (graphQLErrors) {\n    graphQLErrors.map(function (_ref2) {\n      var message = _ref2.message,\n          locations = _ref2.locations,\n          path = _ref2.path;\n      return console.log(\"[GraphQL error]: Message: \".concat(message, \", Location: \").concat(locations, \", Path: \").concat(path));\n    });\n  }\n\n  if (networkError) {\n    console.log(\"[Network error]: \".concat(networkError));\n  }\n});\nvar link = ApolloLink.from([errorLink, httpLink]);\nvar cache = new InMemoryCache();\nvar client = new ApolloClient({\n  link: link,\n  cache: cache\n});\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/index.js"],"names":["React","ReactDOM","ApolloProvider","ApolloClient","ApolloLink","HttpLink","onError","InMemoryCache","serviceWorker","App","GITHUB_BASE_URL","httpLink","uri","headers","authorization","process","env","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","errorLink","graphQLErrors","networkError","map","message","locations","path","console","log","link","from","cache","client","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,aAAP;AAEA,IAAMC,eAAe,GAAG,gCAAxB;AAEA,IAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAC5BO,EAAAA,GAAG,EAAEF,eADuB;AAE5BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,mBACXC,OAAO,CAACC,GAAR,CAAYC,sCADD;AADN;AAFmB,CAAb,CAAjB;AASA,IAAMC,SAAS,GAAGZ,OAAO,CAAC,gBAAqC;AAAA,MAAlCa,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC7D,MAAID,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACE,GAAd,CAAkB;AAAA,UAAGC,OAAH,SAAGA,OAAH;AAAA,UAAYC,SAAZ,SAAYA,SAAZ;AAAA,UAAuBC,IAAvB,SAAuBA,IAAvB;AAAA,aAChBC,OAAO,CAACC,GAAR,qCAC+BJ,OAD/B,yBACqDC,SADrD,qBACyEC,IADzE,EADgB;AAAA,KAAlB;AAKD;;AAED,MAAIJ,YAAJ,EAAkB;AAChBK,IAAAA,OAAO,CAACC,GAAR,4BAAgCN,YAAhC;AACD;AACF,CAZwB,CAAzB;AAcA,IAAMO,IAAI,GAAGvB,UAAU,CAACwB,IAAX,CAAgB,CAACV,SAAD,EAAYP,QAAZ,CAAhB,CAAb;AAEA,IAAMkB,KAAK,GAAG,IAAItB,aAAJ,EAAd;AAEA,IAAMuB,MAAM,GAAG,IAAI3B,YAAJ,CAAiB;AAC9BwB,EAAAA,IAAI,EAAJA,IAD8B;AAE9BE,EAAAA,KAAK,EAALA;AAF8B,CAAjB,CAAf;AAKA5B,QAAQ,CAAC8B,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nimport './style.css';\n\nconst GITHUB_BASE_URL = 'https://api.github.com/graphql';\n\nconst httpLink = new HttpLink({\n  uri: GITHUB_BASE_URL,\n  headers: {\n    authorization: `Bearer ${\n      process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n    }`,\n  },\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    );\n  }\n\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}