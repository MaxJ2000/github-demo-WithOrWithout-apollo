{"ast":null,"code":"import _classCallCheck from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Comment/CommentAdd/index.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { ADD_COMMENT } from './mutations';\nimport TextArea from '../../TextArea';\nimport Button from '../../Button';\nimport ErrorMessage from '../../Error';\n\nvar CommentAdd =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentAdd, _Component);\n\n  function CommentAdd() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentAdd);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentAdd)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: ''\n    };\n\n    _this.onChange = function (value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.onSubmit = function (event, addComment) {\n      addComment().then(function () {\n        return _this.setState({\n          value: ''\n        });\n      });\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentAdd, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var issueId = this.props.issueId;\n      var value = this.state.value;\n      return React.createElement(Mutation, {\n        mutation: ADD_COMMENT,\n        variables: {\n          body: value,\n          subjectId: issueId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, function (addComment, _ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, error && React.createElement(ErrorMessage, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"form\", {\n          onSubmit: function onSubmit(e) {\n            return _this2.onSubmit(e, addComment);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(TextArea, {\n          value: value,\n          onChange: function onChange(e) {\n            return _this2.onChange(e.target.value);\n          },\n          placeholder: \"Leave a comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(Button, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Comment\")));\n      });\n    }\n  }]);\n\n  return CommentAdd;\n}(Component);\n\nexport default CommentAdd;","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/with-apollo/src/Comment/CommentAdd/index.js"],"names":["React","Component","Mutation","ADD_COMMENT","TextArea","Button","ErrorMessage","CommentAdd","state","value","onChange","setState","onSubmit","event","addComment","then","preventDefault","issueId","props","body","subjectId","data","loading","error","e","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,aAAzB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,Q,GAAW,UAAAD,KAAK,EAAI;AAClB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;UAEDG,Q,GAAW,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAChCA,MAAAA,UAAU,GAAGC,IAAb,CAAkB;AAAA,eAAM,MAAKJ,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAN;AAAA,OAAlB;AAEAI,MAAAA,KAAK,CAACG,cAAN;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,UAECR,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAIP,aACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEN,WADZ;AAEE,QAAA,SAAS,EAAE;AAAEgB,UAAAA,IAAI,EAAEV,KAAR;AAAeW,UAAAA,SAAS,EAAEH;AAA1B,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,UAACH,UAAD;AAAA,YAAeO,IAAf,QAAeA,IAAf;AAAA,YAAqBC,OAArB,QAAqBA,OAArB;AAAA,YAA8BC,KAA9B,QAA8BA,KAA9B;AAAA,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KAAK,IAAI,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ,EAGE;AAAM,UAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACZ,QAAL,CAAcY,CAAd,EAAiBV,UAAjB,CAAJ;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAEL,KADT;AAEE,UAAA,QAAQ,EAAE,kBAAAe,CAAC;AAAA,mBAAI,MAAI,CAACd,QAAL,CAAcc,CAAC,CAACC,MAAF,CAAShB,KAAvB,CAAJ;AAAA,WAFb;AAGE,UAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CAHF,CADD;AAAA,OAJH,CADF;AAqBD;;;;EAxCsBR,S;;AA2CzB,eAAeM,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\n\nimport { ADD_COMMENT } from './mutations';\n\nimport TextArea from '../../TextArea';\nimport Button from '../../Button';\nimport ErrorMessage from '../../Error';\n\nclass CommentAdd extends Component {\n  state = {\n    value: '',\n  };\n\n  onChange = value => {\n    this.setState({ value });\n  };\n\n  onSubmit = (event, addComment) => {\n    addComment().then(() => this.setState({ value: '' }));\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { issueId } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Mutation\n        mutation={ADD_COMMENT}\n        variables={{ body: value, subjectId: issueId }}\n      >\n        {(addComment, { data, loading, error }) => (\n          <div>\n            {error && <ErrorMessage error={error} />}\n\n            <form onSubmit={e => this.onSubmit(e, addComment)}>\n              <TextArea\n                value={value}\n                onChange={e => this.onChange(e.target.value)}\n                placeholder=\"Leave a comment\"\n              />\n              <Button type=\"submit\">Comment</Button>\n            </form>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CommentAdd;\n"]},"metadata":{},"sourceType":"module"}