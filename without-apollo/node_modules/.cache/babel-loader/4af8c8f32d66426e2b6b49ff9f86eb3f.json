{"ast":null,"code":"import _classCallCheck from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar TITLE = 'React GraphQL GitHub Client';\nvar axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: \"bearer \".concat(process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN)\n  }\n});\nvar GET_ISSUES_OF_REPOSITORY = \"\\n  query ($organization: String!, $repository: String!, $cursor: String) {\\n    organization(login: $organization) {\\n      name\\n      url\\n      repository(name: $repository) {\\n        id\\n        name\\n        url\\n        stargazers {\\n          totalCount\\n        }\\n        viewerHasStarred\\n        issues(first: 5, after: $cursor, states: [OPEN]) {\\n          edges {\\n            node {\\n              id\\n              title\\n              url\\n              reactions(last: 3) {\\n                edges {\\n                  node {\\n                    id\\n                    content\\n                  }\\n                }\\n              }\\n            }\\n          }\\n          totalCount\\n          pageInfo {\\n            endCursor\\n            hasNextPage\\n          }\\n        }\\n      }\\n    }\\n  }\\n\";\nvar ADD_STAR = \"\\n  mutation ($repositoryId: ID!) {\\n    addStar(input:{starrableId:$repositoryId}) {\\n      starrable {\\n        viewerHasStarred\\n      }\\n    }\\n  }\\n\";\nvar REMOVE_STAR = \"\\n  mutation ($repositoryId: ID!) {\\n    removeStar(input:{starrableId:$repositoryId}) {\\n      starrable {\\n        viewerHasStarred\\n      }\\n    }\\n  }\\n\";\n\nvar getIssuesOfRepository = function getIssuesOfRepository(path, cursor) {\n  var _path$split = path.split('/'),\n      _path$split2 = _slicedToArray(_path$split, 2),\n      organization = _path$split2[0],\n      repository = _path$split2[1];\n\n  return axiosGitHubGraphQL.post('', {\n    query: GET_ISSUES_OF_REPOSITORY,\n    variables: {\n      organization: organization,\n      repository: repository,\n      cursor: cursor\n    }\n  });\n};\n\nvar resolveIssuesQuery = function resolveIssuesQuery(queryResult, cursor) {\n  return function (state) {\n    var _queryResult$data = queryResult.data,\n        data = _queryResult$data.data,\n        errors = _queryResult$data.errors;\n\n    if (!cursor) {\n      return {\n        organization: data.organization,\n        errors: errors\n      };\n    }\n\n    var oldIssues = state.organization.repository.issues.edges;\n    var newIssues = data.organization.repository.issues.edges;\n    var updatedIssues = [].concat(_toConsumableArray(oldIssues), _toConsumableArray(newIssues));\n    return {\n      organization: _objectSpread({}, data.organization, {\n        repository: _objectSpread({}, data.organization.repository, {\n          issues: _objectSpread({}, data.organization.repository.issues, {\n            edges: updatedIssues\n          })\n        })\n      }),\n      errors: errors\n    };\n  };\n};\n\nvar addStarToRepository = function addStarToRepository(repositoryId) {\n  return axiosGitHubGraphQL.post('', {\n    query: ADD_STAR,\n    variables: {\n      repositoryId: repositoryId\n    }\n  });\n};\n\nvar resolveAddStarMutation = function resolveAddStarMutation(mutationResult) {\n  return function (state) {\n    var viewerHasStarred = mutationResult.data.data.addStar.starrable.viewerHasStarred;\n    var totalCount = state.organization.repository.stargazers.totalCount;\n    return _objectSpread({}, state, {\n      organization: _objectSpread({}, state.organization, {\n        repository: _objectSpread({}, state.organization.repository, {\n          viewerHasStarred: viewerHasStarred,\n          stargazers: {\n            totalCount: totalCount + 1\n          }\n        })\n      })\n    });\n  };\n};\n\nvar removeStarFromRepository = function removeStarFromRepository(repositoryId) {\n  return axiosGitHubGraphQL.post('', {\n    query: REMOVE_STAR,\n    variables: {\n      repositoryId: repositoryId\n    }\n  });\n};\n\nvar resolveRemoveStarMutation = function resolveRemoveStarMutation(mutationResult) {\n  return function (state) {\n    var viewerHasStarred = mutationResult.data.data.removeStar.starrable.viewerHasStarred;\n    var totalCount = state.organization.repository.stargazers.totalCount;\n    return _objectSpread({}, state, {\n      organization: _objectSpread({}, state.organization, {\n        repository: _objectSpread({}, state.organization.repository, {\n          viewerHasStarred: viewerHasStarred,\n          stargazers: {\n            totalCount: totalCount - 1\n          }\n        })\n      })\n    });\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      path: 'the-road-to-learn-react/the-road-to-learn-react',\n      organization: null,\n      errors: null\n    };\n\n    _this.onChange = function (event) {\n      _this.setState({\n        path: event.target.value\n      });\n    };\n\n    _this.onSubmit = function (event) {\n      _this.onFetchFromGitHub(_this.state.path);\n\n      event.preventDefault();\n    };\n\n    _this.onFetchFromGitHub = function (path, cursor) {\n      getIssuesOfRepository(path, cursor).then(function (queryResult) {\n        return _this.setState(resolveIssuesQuery(queryResult, cursor));\n      });\n    };\n\n    _this.onFetchMoreIssues = function () {\n      var endCursor = _this.state.organization.repository.issues.pageInfo.endCursor;\n\n      _this.onFetchFromGitHub(_this.state.path, endCursor);\n    };\n\n    _this.onStarRepository = function (repositoryId, viewerHasStarred) {\n      if (viewerHasStarred) {\n        removeStarFromRepository(repositoryId).then(function (mutationResult) {\n          return _this.setState(resolveRemoveStarMutation(mutationResult));\n        });\n      } else {\n        addStarToRepository(repositoryId).then(function (mutationResult) {\n          return _this.setState(resolveAddStarMutation(mutationResult));\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onFetchFromGitHub(this.state.path);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          path = _this$state.path,\n          organization = _this$state.organization,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, TITLE), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Show open issues for https://github.com/\"), React.createElement(\"input\", {\n        id: \"url\",\n        type: \"text\",\n        value: path,\n        onChange: this.onChange,\n        style: {\n          width: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), organization ? React.createElement(Organization, {\n        organization: organization,\n        errors: errors,\n        onFetchMoreIssues: this.onFetchMoreIssues,\n        onStarRepository: this.onStarRepository,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"No information yet ...\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar Organization = function Organization(_ref) {\n  var organization = _ref.organization,\n      errors = _ref.errors,\n      onFetchMoreIssues = _ref.onFetchMoreIssues,\n      onStarRepository = _ref.onStarRepository;\n\n  if (errors) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Something went wrong:\"), errors.map(function (error) {\n      return error.message;\n    }).join(' '));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Issues from Organization:\"), React.createElement(\"a\", {\n    href: organization.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, organization.name)), React.createElement(Repository, {\n    repository: organization.repository,\n    onFetchMoreIssues: onFetchMoreIssues,\n    onStarRepository: onStarRepository,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }));\n};\n\nvar Repository = function Repository(_ref2) {\n  var repository = _ref2.repository,\n      onFetchMoreIssues = _ref2.onFetchMoreIssues,\n      onStarRepository = _ref2.onStarRepository;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"In Repository:\"), React.createElement(\"a\", {\n    href: repository.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, repository.name)), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return onStarRepository(repository.id, repository.viewerHasStarred);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, repository.stargazers.totalCount, repository.viewerHasStarred ? ' Unstar' : ' Star'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, repository.issues.edges.map(function (issue) {\n    return React.createElement(\"li\", {\n      key: issue.node.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.node.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, issue.node.title), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, issue.node.reactions.edges.map(function (reaction) {\n      return React.createElement(\"li\", {\n        key: reaction.node.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, reaction.node.content);\n    })));\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }), repository.issues.pageInfo.hasNextPage && React.createElement(\"button\", {\n    onClick: onFetchMoreIssues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"More\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/john/Documents/Code/github-demo-WithOrWithout-apollo/without-apollo/src/App.js"],"names":["React","Component","axios","TITLE","axiosGitHubGraphQL","create","baseURL","headers","Authorization","process","env","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","GET_ISSUES_OF_REPOSITORY","ADD_STAR","REMOVE_STAR","getIssuesOfRepository","path","cursor","split","organization","repository","post","query","variables","resolveIssuesQuery","queryResult","state","data","errors","oldIssues","issues","edges","newIssues","updatedIssues","addStarToRepository","repositoryId","resolveAddStarMutation","mutationResult","viewerHasStarred","addStar","starrable","totalCount","stargazers","removeStarFromRepository","resolveRemoveStarMutation","removeStar","App","onChange","event","setState","target","value","onSubmit","onFetchFromGitHub","preventDefault","then","onFetchMoreIssues","endCursor","pageInfo","onStarRepository","width","Organization","map","error","message","join","url","name","Repository","id","issue","node","title","reactions","reaction","content","hasNextPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst TITLE = 'React GraphQL GitHub Client';\n\nconst axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: `bearer ${\n      process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n    }`,\n  },\n});\n\nconst GET_ISSUES_OF_REPOSITORY = `\n  query ($organization: String!, $repository: String!, $cursor: String) {\n    organization(login: $organization) {\n      name\n      url\n      repository(name: $repository) {\n        id\n        name\n        url\n        stargazers {\n          totalCount\n        }\n        viewerHasStarred\n        issues(first: 5, after: $cursor, states: [OPEN]) {\n          edges {\n            node {\n              id\n              title\n              url\n              reactions(last: 3) {\n                edges {\n                  node {\n                    id\n                    content\n                  }\n                }\n              }\n            }\n          }\n          totalCount\n          pageInfo {\n            endCursor\n            hasNextPage\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ADD_STAR = `\n  mutation ($repositoryId: ID!) {\n    addStar(input:{starrableId:$repositoryId}) {\n      starrable {\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\nconst REMOVE_STAR = `\n  mutation ($repositoryId: ID!) {\n    removeStar(input:{starrableId:$repositoryId}) {\n      starrable {\n        viewerHasStarred\n      }\n    }\n  }\n`;\n\nconst getIssuesOfRepository = (path, cursor) => {\n  const [organization, repository] = path.split('/');\n\n  return axiosGitHubGraphQL.post('', {\n    query: GET_ISSUES_OF_REPOSITORY,\n    variables: { organization, repository, cursor },\n  });\n};\n\nconst resolveIssuesQuery = (queryResult, cursor) => state => {\n  const { data, errors } = queryResult.data;\n\n  if (!cursor) {\n    return {\n      organization: data.organization,\n      errors,\n    };\n  }\n\n  const { edges: oldIssues } = state.organization.repository.issues;\n  const { edges: newIssues } = data.organization.repository.issues;\n  const updatedIssues = [...oldIssues, ...newIssues];\n\n  return {\n    organization: {\n      ...data.organization,\n      repository: {\n        ...data.organization.repository,\n        issues: {\n          ...data.organization.repository.issues,\n          edges: updatedIssues,\n        },\n      },\n    },\n    errors,\n  };\n};\n\nconst addStarToRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: ADD_STAR,\n    variables: { repositoryId },\n  });\n};\n\nconst resolveAddStarMutation = mutationResult => state => {\n  const {\n    viewerHasStarred,\n  } = mutationResult.data.data.addStar.starrable;\n\n  const { totalCount } = state.organization.repository.stargazers;\n\n  return {\n    ...state,\n    organization: {\n      ...state.organization,\n      repository: {\n        ...state.organization.repository,\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount + 1,\n        },\n      },\n    },\n  };\n};\n\nconst removeStarFromRepository = repositoryId => {\n  return axiosGitHubGraphQL.post('', {\n    query: REMOVE_STAR,\n    variables: { repositoryId },\n  });\n};\n\nconst resolveRemoveStarMutation = mutationResult => state => {\n  const {\n    viewerHasStarred,\n  } = mutationResult.data.data.removeStar.starrable;\n\n  const { totalCount } = state.organization.repository.stargazers;\n\n  return {\n    ...state,\n    organization: {\n      ...state.organization,\n      repository: {\n        ...state.organization.repository,\n        viewerHasStarred,\n        stargazers: {\n          totalCount: totalCount - 1,\n        },\n      },\n    },\n  };\n};\n\nclass App extends Component {\n  state = {\n    path: 'the-road-to-learn-react/the-road-to-learn-react',\n    organization: null,\n    errors: null,\n  };\n\n  componentDidMount() {\n    this.onFetchFromGitHub(this.state.path);\n  }\n\n  onChange = event => {\n    this.setState({ path: event.target.value });\n  };\n\n  onSubmit = event => {\n    this.onFetchFromGitHub(this.state.path);\n\n    event.preventDefault();\n  };\n\n  onFetchFromGitHub = (path, cursor) => {\n    getIssuesOfRepository(path, cursor).then(queryResult =>\n      this.setState(resolveIssuesQuery(queryResult, cursor)),\n    );\n  };\n\n  onFetchMoreIssues = () => {\n    const {\n      endCursor,\n    } = this.state.organization.repository.issues.pageInfo;\n\n    this.onFetchFromGitHub(this.state.path, endCursor);\n  };\n\n  onStarRepository = (repositoryId, viewerHasStarred) => {\n    if (viewerHasStarred) {\n      removeStarFromRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveRemoveStarMutation(mutationResult)),\n      );\n    } else {\n      addStarToRepository(repositoryId).then(mutationResult =>\n        this.setState(resolveAddStarMutation(mutationResult)),\n      );\n    }\n  };\n\n  render() {\n    const { path, organization, errors } = this.state;\n\n    return (\n      <div>\n        <h1>{TITLE}</h1>\n\n        <form onSubmit={this.onSubmit}>\n          <label htmlFor=\"url\">\n            Show open issues for https://github.com/\n          </label>\n          <input\n            id=\"url\"\n            type=\"text\"\n            value={path}\n            onChange={this.onChange}\n            style={{ width: '300px' }}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr />\n\n        {organization ? (\n          <Organization\n            organization={organization}\n            errors={errors}\n            onFetchMoreIssues={this.onFetchMoreIssues}\n            onStarRepository={this.onStarRepository}\n          />\n        ) : (\n          <p>No information yet ...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst Organization = ({\n  organization,\n  errors,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => {\n  if (errors) {\n    return (\n      <p>\n        <strong>Something went wrong:</strong>\n        {errors.map(error => error.message).join(' ')}\n      </p>\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <strong>Issues from Organization:</strong>\n        <a href={organization.url}>{organization.name}</a>\n      </p>\n      <Repository\n        repository={organization.repository}\n        onFetchMoreIssues={onFetchMoreIssues}\n        onStarRepository={onStarRepository}\n      />\n    </div>\n  );\n};\n\nconst Repository = ({\n  repository,\n  onFetchMoreIssues,\n  onStarRepository,\n}) => (\n  <div>\n    <p>\n      <strong>In Repository:</strong>\n      <a href={repository.url}>{repository.name}</a>\n    </p>\n\n    <button\n      type=\"button\"\n      onClick={() =>\n        onStarRepository(repository.id, repository.viewerHasStarred)\n      }\n    >\n      {repository.stargazers.totalCount}\n      {repository.viewerHasStarred ? ' Unstar' : ' Star'}\n    </button>\n\n    <ul>\n      {repository.issues.edges.map(issue => (\n        <li key={issue.node.id}>\n          <a href={issue.node.url}>{issue.node.title}</a>\n\n          <ul>\n            {issue.node.reactions.edges.map(reaction => (\n              <li key={reaction.node.id}>{reaction.node.content}</li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n\n    <hr />\n\n    {repository.issues.pageInfo.hasNextPage && (\n      <button onClick={onFetchMoreIssues}>More</button>\n    )}\n  </div>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}